06/16/17
2:14 AM - Working randomly at night
        - started test environment for testing applications on Django
        - Don't want to make test changes on working code
2:16    - Re-installed virtualenv, command "virtualenv */DIR/ " works
        - Currently the Users app is working, not the Dashboard app
2:59    - Fixed Dashboard app
        - Created Rough Draft of dashboard.html
5:05    - Don't know why I am still coding
        - Non-functional code
          - Forms and template for dashboard.html is having issues
          - dashboard.html does not work
9:49    - Code works for dashboard.html using IndexView
        - FormView is currently not working on form.html

        Request Method:	GET
        Request URL:	http://localhost:8000/form/
        Django Version:	1.8.13
        Exception Type:	TypeError
        Exception Value:
        this constructor takes no arguments

        - Patient_list class does not render properly
10:07   - Code works for both form.html and dashboard.html to display views
        - Current issue is with submitting valid data from the form.html
10:42   - forms.html is not sending the POST request

06/18/2017

6:33 - There is an issue with form saving information.
      - Added contacts app from "Effective Django" tutorial

06/19/2017
8:47 - Deleted apps Users and contacts Application
     - Using built-in django authentication - tests are OK!
     - Users are able to be created and logged in

10:19 - renamed dashboard app
      - need to make a migration - issues!
11:40 - users are able to be signup, login, logout
      - commit pushed to github
      - working on deploying to Heroku
5:53  - dawa-test is deployed to Heroku
      - Login page works on production web app
      - Successful signup, login, logout !
7:59  - Error:
django.core.exceptions.ImproperlyConfigured: Requested setting DEFAULT_INDEX_TABLESPACE, but settings
are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call set
tings.configure() before accessing settings.

export DJANGO_SETTINGS_MODULE=django_test.settings

10:31 - python manage.py -- works for commands; django-admin no longer works
      - checklist for deployment production environment

python manage.py check --deploy

System check identified some issues:

WARNINGS:
?: (security.W004) You have not set a value for the SECURE_HSTS_SECONDS setting. If your entire site
is served only over SSL, you may want to consider setting a value and enabling HTTP Strict Transport
Security. Be sure to read the documentation first; enabling HSTS carelessly can cause serious, irreve
rsible problems.
?: (security.W006) Your SECURE_CONTENT_TYPE_NOSNIFF setting is not set to True, so your pages will no
t be served with an 'x-content-type-options: nosniff' header. You should consider enabling this heade
r to prevent the browser from identifying content types incorrectly.
?: (security.W007) Your SECURE_BROWSER_XSS_FILTER setting is not set to True, so your pages will not
be served with an 'x-xss-protection: 1; mode=block' header. You should consider enabling this header
to activate the browser's XSS filtering and help prevent XSS attacks.
?: (security.W008) Your SECURE_SSL_REDIRECT setting is not set to True. Unless your site should be av
ailable over both SSL and non-SSL connections, you may want to either set this setting True or config
ure a load balancer or reverse-proxy server to redirect all connections to HTTPS.
?: (security.W012) SESSION_COOKIE_SECURE is not set to True. Using a secure-only session cookie makes
 it more difficult for network traffic sniffers to hijack user sessions.
?: (security.W016) You have 'django.middleware.csrf.CsrfViewMiddleware' in your MIDDLEWARE_CLASSES, b
ut you have not set CSRF_COOKIE_SECURE to True. Using a secure-only CSRF cookie makes it more difficu
lt for network traffic sniffers to steal the CSRF token.
?: (security.W017) You have 'django.middleware.csrf.CsrfViewMiddleware' in your MIDDLEWARE_CLASSES, b
ut you have not set CSRF_COOKIE_HTTPONLY to True. Using an HttpOnly CSRF cookie makes it more difficu
lt for cross-site scripting attacks to steal the CSRF token.
?: (security.W018) You should not have DEBUG set to True in deployment.
?: (security.W019) You have 'django.middleware.clickjacking.XFrameOptionsMiddleware' in your MIDDLEWA
RE_CLASSES, but X_FRAME_OPTIONS is not set to 'DENY'. The default is 'SAMEORIGIN', but unless there i
s a good reason for your site to serve other parts of itself in a frame, you should change it to 'DEN
Y'.

System check identified 9 issues (0 silenced).
